from aiogram import BaseMiddleware, types
from aiogram.exceptions import TelegramBadRequest, TelegramForbiddenError
from aiogram.client.default import LinkPreviewOptions

from typing import (
    Any,  
    Callable, 
    Dict, 
    Awaitable,
)

from src.config import settings
from src.handlers.keyboard import show_qr






class ChannelSubscriptionWare(BaseMiddleware):
    async def __call__(
            self,
            handler: Callable[[types.TelegramObject, Dict[str, Any]], Awaitable[Any]],
            event: types.TelegramObject,
            data: Dict[str, Any]
    ) -> Any:
        try:
            if all([
                self.check_user_in_chat(
                    await self.get_user_status(event, chat_id)
                ) for chat_id in settings.bot.required_chats ]
                ):
                return await handler(event, data)
        
        except TelegramBadRequest:
            for admin_id in settings.bot.admin_ids:
                await event.bot.send_message(
                    chat_id=admin_id,
                    text = "–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"
                )
            return
        except TelegramForbiddenError:
            for admin_id in settings.bot.admin_ids:
                await event.bot.send_message(
                    chat_id=admin_id,
                    text = "–£–±–µ—Ä–∏—Ç–µ –±–æ—Ç–∞ –∏–∑ —á–µ—Ä–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –≤ –∫–∞–Ω–∞–ª–µ!"
                )
            return
        
        textCallback = (
            f'–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª! –ü—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram –∫–∞–Ω–∞–ª: @siyihotpot_ramen\n'
            '\n'
            '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ‚Äú–ü–æ–ª—É—á–∏—Ç—å‚Äù –∏ –∑–∞–±–∏—Ä–∞–π —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫! üéÅ'
        )
        text = (
            f'–¢—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ <a href="{settings.bot.chat_link}">–∫–∞–Ω–∞–ª</a>! –ü—Ä–æ—Å—Ç–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram –∫–∞–Ω–∞–ª: @siyihotpot_ramen\n'
            '\n'
            '–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É <b>‚Äú–ü–æ–ª—É—á–∏—Ç—å‚Äù</b> –∏ –∑–∞–±–∏—Ä–∞–π —Å–≤–æ–π –ø–æ–¥–∞—Ä–æ–∫! üéÅ'
        )
        if isinstance(event, types.CallbackQuery):
            await event.answer(
                text = textCallback,
                show_alert=True
            )
        else:
            await event.answer(
                text= text,
                link_preview_options=LinkPreviewOptions(is_disabled=True),
                reply_markup=await show_qr()
            )

        
    async def get_user_status(self, event: types.TelegramObject, chat_id: int):
        return await event.bot.get_chat_member(
            chat_id=chat_id,
            user_id=event.from_user.id
        )
    

    def check_user_in_chat(self, u_status):
        if isinstance(u_status, types.ChatMemberMember) or isinstance(u_status, types.ChatMemberAdministrator) \
                or isinstance(u_status, types.ChatMemberOwner):
            return True
        return False